 The assert module provides a set of assertion functions for verifying invariants.
  In assert() function, if the value is not truth, then a AssertionError is thrown with a message property set equal to the value of the message parameter. 

  Syntax:

assert(value[, message])

Node.js assert.deepStrictEqual() Function
The assert.deepStrictEqual() function tests for deep equality between the actual and expected parameters. If the condition is true it will not produce an output else an assertion error is raised.
 
 
 Syntax:
 assert.deepStrictEqual(actual, expected[, message])


 Parameters: This function accepts the following parameters as mentioned above and described below: 

actual: This parameter holds the actual value that need to be evaluated. It is of any type.
expected: This parameter holds the expected value which is matched against actual value. It is of any type.
message: This parameter holds the error message of string or error type. It is an optional parameter.




 The assert.doesNotThrow() function asserts that the function fn does not throw an error.

Syntax:

assert.doesNotThrow(fn[, error][, message])

try { 
    assert.doesNotThrow( 
        () => { 
          throw new TypeError('The Wrong value error'); 
        }, 
        /abcd/, 
        'Whoops'
    ); 
} catch(error) { 
    console.log("Error:", error) 
} 





Node.js assert.equal() Function
The assert.equal() function tests for equality between the actual and the expected parameters. If the condition is true it will not produce an output else an assertion error is raised. 